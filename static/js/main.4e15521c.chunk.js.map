{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","className","styles","TaskEditor","onSubmit","this","TaskEditor_label","TaskEditor_input","type","placeholder","autoComplete","onChange","TaskEditor_button","Component","ContactList","contacts","onRemoveContact","TaskList","map","contact","TaskList_item","TaskList_button","onClick","id","Filter","onChangeFilter","App","filter","addContact","task","addName","includes","inputNumber","Number","alert","length","uuidv4","prevState","changeFilter","getVisibleContacts","toLowerCase","removeContact","contactId","prevContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDom","render","document","querySelector","module","exports"],"mappings":"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","file":"static/js/main.4e15521c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n    static propTypes = {\r\n        name: PropTypes.string,\r\n        number: PropTypes.string,\r\n        onAddContact: PropTypes.func.isRequired\r\n    };\r\n    \r\n    state = {\r\n        name: \"\",\r\n        number: \"\",\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.props.onAddContact({ ...this.state });\r\n\r\n        this.setState({ name: \"\", number: \"\" });\r\n    };\r\n  \r\n    render() {\r\n        return (\r\n            <form\r\n                className={styles.TaskEditor}\r\n                onSubmit={this.handleSubmit}>\r\n                <label\r\n                    className={styles.TaskEditor_label}>\r\n                    Name\r\n                        <input\r\n                            className={styles.TaskEditor_input}\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            placeholder=\"Your name\"\r\n                            autoComplete=\"off\"\r\n                            value={this.state.name}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                </label>\r\n\r\n                <label\r\n                    className={styles.TaskEditor_label}>\r\n                    Number\r\n                    <input\r\n                        className={styles.TaskEditor_input}\r\n                        type=\"text\"\r\n                        name=\"number\"\r\n                        placeholder=\"Your number\"\r\n                        autoComplete=\"off\"\r\n                        value={this.state.number}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label>\r\n\r\n                <button\r\n                    className={styles.TaskEditor_button}\r\n                    type=\"submit\">\r\n                    Add contact\r\n                </button>\r\n            </form>\r\n        );\r\n    };\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nfunction ContactList({ contacts, onRemoveContact }) {\r\n\r\n    return (\r\n        <ul\r\n            className={styles.TaskList}>\r\n            {contacts.map((contact) => (\r\n                <li\r\n                    className={styles.TaskList_item}\r\n                    key={contact.id}>\r\n                    {contact.name}: {contact.number}\r\n                    {\r\n                        <button\r\n                            className={styles.TaskList_button}\r\n                            type=\"button\"\r\n                            name=\"delete\"\r\n                            onClick={() => onRemoveContact(contact.id)}\r\n                        >\r\n                            delete\r\n              </button>\r\n                    }\r\n                </li>\r\n            ))};\r\n        </ul>\r\n    );\r\n    \r\n};\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n    })),\r\n}\r\n\r\nexport default ContactList;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Filter({ value, onChangeFilter }) {\r\n    return (\r\n        <div>\r\n            Find contacts by name\r\n            <input\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={(e) => onChangeFilter(e.target.value)}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChangeFilter: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Filter;","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\n\r\nclass App extends Component {\r\n    state = {\r\n        contacts: [\r\n            // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n            // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n            // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n            // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n        ],\r\n        filter: \"\",\r\n    };\r\n\r\n    componentDidMount() {\r\n        // console.log('componentDidMount');\r\n        const prevContacts = localStorage.getItem('contacts');\r\n        if (prevContacts !== null) {\r\n            this.setState({\r\n                contacts: JSON.parse(prevContacts)\r\n            });\r\n        };\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // console.log('Conatcts componentDidUpdate');\r\n\r\n        if (prevState.contacts !== this.state.contacts) {\r\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\r\n        }\r\n    }\r\n\r\n    addContact = task => {\r\n        const addName = this.state.contacts\r\n            .map((contact) => contact.name)\r\n            .includes(task.name);\r\n\r\n        const inputNumber = Number(task.number)\r\n\r\n        if (addName) {\r\n            alert(`${task.name} is already in contacts`);\r\n        } else if (task.name.length === 0) {\r\n            alert(\"Field 'Name' must be filled!\");\r\n        } else if (task.number.length === 0) {\r\n            alert(\"Field 'Number' must be filled!\")\r\n        } else if (!inputNumber) {\r\n            alert(\"Insert the number\")\r\n        } else {\r\n            const contact = {\r\n                ...task,\r\n                id: uuidv4(),\r\n            };\r\n\r\n            this.setState((prevState) => ({\r\n                contacts: [...prevState.contacts, contact],\r\n            }));\r\n        };\r\n    };\r\n\r\n    changeFilter = (filter) => {\r\n        this.setState({ filter });\r\n    };\r\n\r\n    getVisibleContacts = () => {\r\n        const { contacts, filter } = this.state;\r\n\r\n        return contacts.filter((contact) =>\r\n            contact.name.toLowerCase().includes(filter.toLowerCase())\r\n        );\r\n    };\r\n\r\n    removeContact = (contactId) => {\r\n        this.setState((prevState) => {\r\n          return {\r\n              contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n          };\r\n      });\r\n  };\r\n\r\n    render() {\r\n        const { filter, contacts } = this.state;\r\n\r\n        const visibleContacts = this.getVisibleContacts();\r\n\r\n        return (\r\n            <div>\r\n                <h1>Phonebook</h1>\r\n                <ContactForm\r\n                    onAddContact={this.addContact}\r\n                />\r\n                {/* {visibleContacts.length > 1 && ( */}\r\n                <Filter\r\n                    value={filter}\r\n                    onChangeFilter={this.changeFilter}\r\n                />\r\n                {/* )} */}\r\n                \r\n                {contacts.length > 0 && (\r\n                <h2>Contacts</h2>\r\n                )}\r\n                {visibleContacts.length > 0 && (\r\n                    <ContactList\r\n                        contacts={visibleContacts}\r\n                        onRemoveContact={this.removeContact}\r\n                />\r\n                )}\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './components/App';\n\nReactDom.render(<App />, document.querySelector('#root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactForm_TaskEditor__1UUhb\",\"TaskEditor_label\":\"ContactForm_TaskEditor_label__2oW29\",\"TaskEditor_input\":\"ContactForm_TaskEditor_input__dppSu\",\"TaskEditorinput\":\"ContactForm_TaskEditorinput__1K51G\",\"TaskEditor_button\":\"ContactForm_TaskEditor_button__2OKVn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__8nF1b\",\"TaskList_item\":\"ContactList_TaskList_item__2boD6\",\"completed\":\"ContactList_completed__G2i_s\",\"TaskList_text\":\"ContactList_TaskList_text__16xgJ\",\"TaskList_actions\":\"ContactList_TaskList_actions__2qX5t\",\"TaskList_button\":\"ContactList_TaskList_button__3qaNO\"};"],"sourceRoot":""}